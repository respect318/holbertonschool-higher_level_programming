>>> import importlib.util
>>> spec = importlib.util.spec_from_file_location("BaseGeometryModule", "7-base_geometry.py")
>>> bg_module = importlib.util.module_from_spec(spec)
>>> spec.loader.exec_module(bg_module)
>>> bg = bg_module.BaseGeometry()
>>> bg.integer_validator("age", 1)
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
        ...
TypeError: name must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("age")
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 1 required positional argument: 'value'


>>> bg.integer_validator("name", True)
Traceback (most recent call last):
        ...
TypeError: name must be an integer

>>> bg.integer_validator("name", (1, 3))
Traceback (most recent call last):
        ...
TypeError: name must be an integer

>>> bg.integer_validator("name", {1, 3})
Traceback (most recent call last):
        ...
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
        ...
TypeError: name must be an integer
